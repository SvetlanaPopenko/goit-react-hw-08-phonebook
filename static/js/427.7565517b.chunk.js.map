{"version":3,"file":"static/js/427.7565517b.chunk.js","mappings":"iRAIaA,GAAmBC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,gPAahBE,EAAeF,EAAAA,EAAAA,MAAH,wJASZG,GAAgBH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,4HAQbK,GAAQL,EAAAA,EAAAA,GAAOM,EAAAA,GAAPN,CAAH,kFAMLO,EAAiBP,EAAAA,EAAAA,OAAH,8V,SC7BdQ,EAAe,WAC1B,IAMMC,GAAWC,EAAAA,EAAAA,MAajB,OACE,SAAC,KAAD,CAAQC,SAZW,SAACC,EAAQC,GAC5BJ,GACEK,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAOG,KACbC,MAAOJ,EAAOI,MACdC,SAAUL,EAAOK,YAGrBJ,EAAMK,WACP,EAGiCC,cApBZ,CACpBJ,KAAM,GACNC,MAAO,GACPC,SAAU,IAiBV,UACE,UAAClB,EAAD,CAAkBqB,aAAa,MAA/B,WACE,UAAClB,EAAD,uBAEE,SAACC,EAAD,CAAekB,KAAK,OAAON,KAAK,UAChC,SAACV,EAAD,CAAOU,KAAK,OAAOO,UAAU,YAE/B,UAACpB,EAAD,oBAEE,SAACC,EAAD,CAAekB,KAAK,QAAQN,KAAK,WACjC,SAACV,EAAD,CAAOU,KAAK,QAAQO,UAAU,YAEhC,UAACpB,EAAD,uBAEE,SAACC,EAAD,CAAekB,KAAK,WAAWN,KAAK,cACpC,SAACV,EAAD,CAAOU,KAAK,WAAWO,UAAU,YAEnC,SAACf,EAAD,CAAgBc,KAAK,SAArB,0BAIP,E,UClDYE,EAAW,WACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,2CAEF,SAAChB,EAAD,MAGL,EAED,G","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { ErrorMessage, Field, Form } from 'formik';\n\nexport const RegisterFormWrap = styled(Form)`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  font-size: 24px;\n  border: 3px solid white;\n  padding: 30px;\n  margin: 30px auto;\n`;\n\nexport const RegisterText = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  font-size: 24px;\n  font-weight: 500;\n  color: rgb(85, 26, 139);\n`;\n\nexport const RegisterInput = styled(Field)`\n  height: 40px;\n  border-radius: 15px;\n  font-size: 30px;\n  color: blueviolet;\n  padding: 5px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  font-size: 24px;\n  width: fit-content;\n  color: red;\n`;\n\nexport const RegisterButton = styled.button`\n  font-size: 24px;\n  color: white;\n  border-radius: 15px;\n  background: linear-gradient(160deg, #ed8bf8, #6d0462);\n  padding: 10px;\n  cursor: pointer;\n  transition: 250ms box-shadow ease-out, 250ms color ease-in;\n  :hover {\n    color: #f8f856;\n    box-shadow: 1px 3px 2px blanchedalmond, -1px -3px 5px #ed8bf8;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operations';\nimport { Formik } from 'formik';\nimport {\n  RegisterFormWrap,\n  RegisterText,\n  RegisterInput,\n  Error,\n  RegisterButton,\n} from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, props) => {\n    dispatch(\n      register({\n        name: values.name,\n        email: values.email,\n        password: values.password,\n      })\n    );\n    props.resetForm();\n  };\n\n  return (\n    <Formik onSubmit={handleSubmit} initialValues={initialValues}>\n      <RegisterFormWrap autoComplete=\"off\">\n        <RegisterText>\n          UserName\n          <RegisterInput type=\"text\" name=\"name\" />\n          <Error name=\"name\" component=\"div\" />\n        </RegisterText>\n        <RegisterText>\n          Email\n          <RegisterInput type=\"email\" name=\"email\" />\n          <Error name=\"email\" component=\"div\" />\n        </RegisterText>\n        <RegisterText>\n          Password\n          <RegisterInput type=\"password\" name=\"password\" />\n          <Error name=\"password\" component=\"div\" />\n        </RegisterText>\n        <RegisterButton type=\"submit\">Register</RegisterButton>\n      </RegisterFormWrap>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport const Register = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Register</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["RegisterFormWrap","styled","Form","RegisterText","RegisterInput","Field","Error","ErrorMessage","RegisterButton","RegisterForm","dispatch","useDispatch","onSubmit","values","props","register","name","email","password","resetForm","initialValues","autoComplete","type","component","Register","Helmet"],"sourceRoot":""}